from collections import defaultdict


class MaxHeap:
    def __init__(self):
        self.list = [0]
        self.size = 0

    def move_up(self, i):
        while i//2 > 0:
            if self.list[i] > self.list[i // 2 ]:
                self.list[i], self.list[i // 2 ] = self.list[i // 2 ], self.list[i]
            i = i // 2

    def insert(self, k):
        self.list.append(k)
        self.size += 1
        self.move_up(self.size)

    def move_down(self, i):
        while i * 2 <= self.size:
            mc = self.max_leaf(i)
            if self.list[i] < self.list[mc]:
                self.list[i], self.list[mc] = self.list[mc], self.list[i]
            i = mc

    def max_leaf(self, i):
        if i * 2 + 1 > self.size:
            return i * 2
        else:
            return (i * 2, i * 2 + 1)[self.list[i * 2]] < self.list[i * 2 + 1]

    def get_max(self):
        return_value = self.list[1]
        self.list[1] = self.list[self.size]
        self.size -= 1
        self.list.pop()
        self.move_down(1)
        return return_value
